{"version":3,"sources":["components/Header.js","components/Item.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Item","text","sub_text","link","colors","target","onMouseOver","e","console","log","_","shuffle","style","color","pop","onMouseLeave","class","data-img","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.119318cb.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/Header.css'\r\nimport {FiFacebook , FiLinkedin , FiTwitter , FiGithub} from 'react-icons/fi'\r\nimport {FaLongArrowAltRight} from 'react-icons/fa'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className='header'>\r\n             <div className=\"introduction\">\r\n                <h2 className='hello_world'>Hello World !!!!</h2>\r\n                <h2 className='introduction_name'>its danish mehmood</h2>\r\n                <h2 className=\"introduction_profession\">web developer <span className='blueish'> / </span>  <span className=\"yellowish\"> JS </span> developer</h2>\r\n                <h2 className='introduction_social_media'> <a href=\"https://www.facebook.com/rajadanish.mehmood/\"> facebook </a> <FiFacebook/> \r\n                <span className=\"blueish\"> / </span> \r\n                <a href=\"https://www.linkedin.com/in/danish-mehmood-215480163/\"> linkedIn </a> <FiLinkedin/>\r\n                 <span className=\"blueish\"> / \r\n                 </span> <a href=\"https://twitter.com/home\"> twitter </a> <FiTwitter/>\r\n                 <span className=\"blueish\"> / </span> \r\n                 <a href=\"https://github.com/danish-mehmood\"> Github </a> <FiGithub/>\r\n                 </h2>\r\n                 <h2 className=\"resume pinkish\"><a href='https://danish-mehmood.netlify.app'>My Resume</a></h2>\r\n                 \r\n             </div>\r\n\r\n             <div className=\"formalities\">\r\n                   \r\n                     <h2 className=\"contact_me\">contact me<span className=\"blueish\"> at</span> rdm355190<span className=\"blueish\">@</span>gmail<span className=\"blueish\">.</span>com </h2>\r\n                     <h2 className='location'>pakistan <FaLongArrowAltRight/> <span className=\"yellowish\">punjab</span> <FaLongArrowAltRight/>  <span className='pinkish'>islamabad</span> </h2>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n","import React   from 'react'\r\nimport _ from 'lodash'\r\n\r\nexport default function Item({text , sub_text , link}) {\r\n    let colors =['#77badc', '#d1ca71' , '#d43764' ]\r\n    \r\n    \r\n    const mouse_over_handler = (e)=>{\r\n      console.log(colors)\r\n      colors = _.shuffle(colors)\r\n      e.target.style.color = colors.pop()\r\n\r\n    }\r\n\r\n    const mouse_leave_handler=(e)=>{\r\n      e.target.style.color='#fcffff'\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <a target='_blank'  href={link} onMouseOver={mouse_over_handler}  onMouseLeave={mouse_leave_handler} class=\"menu__item\" data-img=\"../assets/img1.jpg\">\r\n\t\t\t\t<span class=\"menu__item-text\"><span class=\"menu__item-textinner\">{text}</span></span>\r\n\t\t\t\t<span class=\"menu__item-sub\">{sub_text}</span>\r\n\t\t\t</a>\r\n            </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/Main.css'\r\nimport Item from  './Item'\r\n\r\nexport default function Main() {\r\n\r\n    return (\r\n        <div>\r\n            <main>\r\n\t\r\n\t\t<nav class=\"menu\" >\r\n\t\t\t<Item text='Oxford University site' sub_text='culturalexpertise.net' link='https://culturalexpertise.net' />\r\n            <Item text='shop and shout brand' sub_text='shopandshout.com' link='https://shopandshout.com'/>\r\n            <Item text='Amdetails ecommerce site' sub_text='amdetails.co.uk' link='https://amdetails.co.uk'/>\r\n            <Item text='ahbrass ecommerce site' sub_text='ahbrass.co.uk' link='https://ahbrass.co.uk'/>\r\n            <Item text='zarela ecommerce site' sub_text='zarela.co.uk' link='https://zarela.co.uk'/>\r\n            <Item text='the life properties' sub_text='thelife.pk' link='https://thelife.pk'/>\r\n            <Item text='emirates marketing ' sub_text='emiratesmarketing.pk' link='https://emiratesmarketing.pk'/>\r\n            <Item text='Phdec website' sub_text='phdec.gov.pk' link='https://phdec.gov.pk'/>\r\n            <Item text='relicsol digital solutions' sub_text='relicsol.com' link='https://relicsol.com'/>\r\n            <Item text='Property time realestate' sub_text='propertytime.pk' link='https://propertytime.pk'/>\r\n            <Item text='facebook Marketing automation' sub_text='gateway2fb.com' link='https://gateway2fb.com'/>\r\n            <Item text='3D chairs animation' sub_text='3dseater.netlify.app' link='https://3dseaters.netlify.app'/>\r\n            <Item text='GSAP page transitions' sub_text='gsappagetransition.netlify.app/' link='https://gsappagetransition.netlify.app/'/>\r\n            <Item text='images swipe effect' sub_text='swipeffect.netlify.app/' link='https://swipeffect.netlify.app/'/>\r\n            <Item text='image hero animation' sub_text='heroanimated.netlify.app/' link='https://heroanimated.netlify.app/'/>\r\n            <Item text='image reveal concept' sub_text='imagerevealer.netlify.app/' link='https://imagerevealer.netlify.app/'/>\r\n            <Item text='skew scrolling ' sub_text='skewscroll.netlify.app/' link='https://skewscroll.netlify.app/'/>\r\n            <Item text=' hamburger animation' sub_text='hamburgeranimated.netlify.app/' link='https://hamburgeranimated.netlify'/>\r\n\t\t\t\r\n\t\t</nav>\r\n\t</main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport Header from './components/Header'\nimport Main from './components/Main'\n\n\n\nfunction App() {\n  return (\n\n    <div className=\"\">\n      <Header/>\n     <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}